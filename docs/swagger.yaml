basePath: /v1
definitions:
  login.ReqLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  login.ReqRegister:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  menu.CreateMenuModel:
    properties:
      category:
        type: string
      created_at:
        example: "2006-01-02T15:04:05Z"
        type: string
      description:
        type: string
      menu_id:
        type: integer
      menu_image_url:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  menu.MenuModel:
    properties:
      category:
        type: string
      created_at:
        type: string
      description:
        type: string
      menu_id:
        type: integer
      menu_image_url:
        type: string
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
  menu.UpdateMenuModel:
    properties:
      category:
        type: string
      description:
        type: string
      menu_id:
        type: integer
      menu_image_url:
        type: string
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
  price.CreatePriceModel:
    properties:
      price:
        type: number
      price_name:
        type: string
    type: object
  price.PriceModel:
    properties:
      price:
        type: number
      price_name:
        type: string
    type: object
  price.UpdatePriceModel:
    properties:
      price:
        type: number
      price_name:
        type: string
    type: object
  qrcode.CreateQrCodeModel:
    properties:
      image:
        type: string
      url:
        type: string
    type: object
  user.CreateUserModel:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      password:
        type: string
      user_name:
        type: string
    type: object
  user.UpdateUserModel:
    properties:
      avatar:
        type: string
      email:
        type: string
      phone:
        type: string
      updated_at:
        type: string
      user_name:
        type: string
    type: object
  user.UserModel:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      email:
        type: string
      phone:
        type: string
      user_name:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: veliulugut1@gmail.com
    name: Veli Ulugut
  description: cafe-management
  title: Cafe-Management API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: login
      parameters:
      - description: login
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/login.ReqLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: login
      tags:
      - auth
  /menu:
    get:
      consumes:
      - application/json
      description: get all menu
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/menu.MenuModel'
      security:
      - ApiKeyAuth: []
      summary: list all menu
      tags:
      - menu
    post:
      consumes:
      - application/json
      description: create menu
      parameters:
      - description: Create a new menu
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/menu.CreateMenuModel'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
      security:
      - ApiKeyAuth: []
      summary: create menu
      tags:
      - menu
  /menu/{id}:
    delete:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
      summary: delete menu by id
      tags:
      - menu
    post:
      consumes:
      - application/json
      parameters:
      - description: Update a  menu
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/menu.UpdateMenuModel'
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: update menu by id
      tags:
      - menu
  /menu/get/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/menu.MenuModel'
      security:
      - ApiKeyAuth: []
      summary: get menu by id
      tags:
      - menu
  /price:
    get:
      consumes:
      - application/json
      description: get all price
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/price.PriceModel'
      summary: list all price
      tags:
      - price
    post:
      consumes:
      - application/json
      description: create price
      parameters:
      - description: Create a new price
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/price.CreatePriceModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: create price
      tags:
      - price
  /price/{id}:
    delete:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
      summary: delete price by id
      tags:
      - price
    post:
      consumes:
      - application/json
      parameters:
      - description: Update a price
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/price.UpdatePriceModel'
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: update price by id
      tags:
      - price
  /qrcode:
    get:
      consumes:
      - application/json
      description: Get all QR codes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: List all QR codes
      tags:
      - qrcode
    post:
      consumes:
      - application/json
      description: Generate a new QR code
      parameters:
      - description: Generate a new qr code
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/qrcode.CreateQrCodeModel'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - image/png
      responses:
        "201":
          description: QR code image
          schema:
            type: file
      security:
      - ApiKeyAuth: []
      summary: Generate QR Code
      tags:
      - qrcode
  /register:
    post:
      consumes:
      - application/json
      description: register
      parameters:
      - description: register
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/login.ReqRegister'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: register
      tags:
      - auth
  /user:
    get:
      consumes:
      - application/json
      description: get all users
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/user.UserModel'
      summary: list all users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: create user
      parameters:
      - description: Create a new user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: create user
      tags:
      - user
  /user/{id}:
    delete:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
      summary: delete user by id
      tags:
      - user
    post:
      consumes:
      - application/json
      parameters:
      - description: Update a  user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserModel'
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: update user by id
      tags:
      - user
  /user/{name}:
    get:
      consumes:
      - application/json
      parameters:
      - description: name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/user.UserModel'
      summary: get user by name
      tags:
      - user
  /user/get/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/user.UserModel'
      security:
      - ApiKeyAuth: []
      summary: get user by id
      tags:
      - user
swagger: "2.0"
